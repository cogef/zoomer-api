service: zoomer
# app and org for use with dashboard.serverless.com
app: zoomer
org: cogef

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin

package:
  include:
    - src/**/*.ejs

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: us-east-2

  stage: ${opt:stage, 'dev'}
  apiName: ${self:service}-${self:provider.stage}

  environment:
    ARCHIVE_ZOOM_CALENDAR_ID: ${env:ARCHIVE_ZOOM_CALENDAR_ID}
    CALENDAR_OWNER_EMAIL: ${env:CALENDAR_OWNER_EMAIL}
    FRONTEND_HOST: ${env:FRONTEND_HOST}
    MASTER_ZOOM_CALENDAR_ID: ${env:MASTER_ZOOM_CALENDAR_ID}
    NODE_ENV: ${env:NODE_ENV, 'development'}
    SA_PROJECT_ID: ${env:SA_PROJECT_ID}
    SA_PRIVATE_KEY_ID: ${env:SA_PRIVATE_KEY_ID}
    SA_PRIVATE_KEY: ${env:SA_PRIVATE_KEY}
    SA_CLIENT_EMAIL: ${env:SA_CLIENT_EMAIL}
    SA_CLIENT_ID: ${env:SA_CLIENT_ID}
    SA_AUTH_URI: ${env:SA_AUTH_URI}
    SA_TOKEN_URI: ${env:SA_TOKEN_URI}
    SA_AUTH_PROVIDER_X509_CERT_URL: ${env:SA_AUTH_PROVIDER_X509_CERT_URL}
    SA_CLIENT_X509_CERT_URL: ${env:SA_CLIENT_X509_CERT_URL}
    SENTRY_DSN: ${env:SENTRY_DSN}
    TRIGGER_TOKEN: ${env:TRIGGER_TOKEN}
    ZOOM_ACCOUNT_ID: ${env:ZOOM_ACCOUNT_ID}
    ZOOM_CLIENT_ID: ${env:ZOOM_CLIENT_ID}
    ZOOM_CLIENT_SECRET: ${env:ZOOM_CLIENT_SECRET}
    ZOOM_NOTIFICATION_TOKEN: ${env:ZOOM_NOTIFICATION_TOKEN}

  httpApi:
    name: ${self:service}-${self:provider.stage}
    cors:
      allowedOrigins: '*'
      allowedHeaders: '*'
      allowedMethods: '*'
      allowCredentials: false
      maxAge: 6000 # In seconds

functions:
  api:
    handler: handler.api
    events:
      - httpApi:
          path: '*'
          method: '*'
